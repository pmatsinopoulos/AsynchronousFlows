/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.panosmatsinopoulos.asynchronousflows

import kotlinx.coroutines.delay
import kotlinx.coroutines.flow.asFlow
import kotlinx.coroutines.flow.map
import kotlinx.coroutines.runBlocking

suspend fun performRequest(request: Int): String {
    delay(1_000)
    return "Response for request $request"
}

fun main() {
    println("Main starting...")
    runBlocking {
        (1..10).asFlow()
            .map { request -> performRequest(request) }
            .collect { response -> println(response) }
    }
    println("Main ending")
}
