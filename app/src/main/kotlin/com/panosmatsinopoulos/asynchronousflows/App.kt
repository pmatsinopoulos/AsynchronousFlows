/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.panosmatsinopoulos.asynchronousflows

import kotlinx.coroutines.delay
import kotlinx.coroutines.flow.Flow
import kotlinx.coroutines.flow.flow
import kotlinx.coroutines.runBlocking
import kotlinx.coroutines.withTimeoutOrNull

fun simple(): Flow<Int> = flow { // flow builder
    for (i in 1..3) {
        delay(100) // pretend doing something long-running.
        println("Emitting $i")
        emit(i)
    }
}

fun main() {
    println("Main starting...")
    runBlocking {
        withTimeoutOrNull(250) {
            simple().collect { value -> println(value) }
        }
    }
    println("Main ending")
}
