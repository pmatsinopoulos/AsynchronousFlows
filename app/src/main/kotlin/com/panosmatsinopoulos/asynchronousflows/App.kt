/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.panosmatsinopoulos.asynchronousflows

import kotlinx.coroutines.flow.asFlow
import kotlinx.coroutines.flow.flowOf
import kotlinx.coroutines.flow.zip
import kotlinx.coroutines.runBlocking

fun log(msg: String) {
    println("[${Thread.currentThread().name}] $msg")
}

fun main() {
    println("Main starting...")
    runBlocking {
        val nums = (1..3).asFlow()
        val strs = flowOf("one", "two", "three")
        nums.zip(strs) { a, b -> "$a -> $b" }
            .collect { println(it) }
    }
    println("Main ending")
}
