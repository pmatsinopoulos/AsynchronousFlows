/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.panosmatsinopoulos.asynchronousflows

import kotlinx.coroutines.flow.Flow
import kotlinx.coroutines.flow.flow
import kotlinx.coroutines.runBlocking

fun simple(): Flow<Int> = flow {
    log("Started simple flow")
    for (i in 1..3) {
        emit(i)
    }
}

fun log(msg: String) {
    println("[${Thread.currentThread().name}] $msg")
}

fun main() {
    println("Main starting...")
    runBlocking {
        simple().collect { value -> log(value.toString()) }
    }
    println("Main ending")
}
